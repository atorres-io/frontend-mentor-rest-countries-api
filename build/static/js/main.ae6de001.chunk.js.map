{"version":3,"sources":["Components/Appbar.js","Components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","withStyles","theme","appbar","backgroundColor","color","boxShadow","spaceBetween","justifyContent","button","textTransform","fontSize","fontWeight","classes","state","setState","AppBar","className","elevation","Toolbar","disableGutters","Typography","variant","component","Button","onClick","document","documentElement","setAttribute","startIcon","InputSearch","root","width","padding","spacing","borderRadius","input","InputBase","BootstrapInput","marginTop","position","palette","background","paper","border","transition","transitions","create","fontFamily","join","borderColor","wrapperDashboard","height","header","display","flexFlow","alignItems","margin","main","lightIcon","opacity","darkIcon","React","useState","age","useHistory","Grid","container","placeholder","startAdornment","InputAdornment","FormControl","InputLabel","htmlFor","NativeSelect","id","value","onChange","aria-label","typography","h1","App","ThemeProvider","createMuiTheme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae6de001.chunk.js","sourcesContent":["import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport {\n\tAppBar,\n\tToolbar,\n\tuseScrollTrigger,\n\tSlide,\n\tTypography,\n\tButton,\n} from '@material-ui/core';\nimport MoonFillIcon from '@material-ui/icons/Brightness2';\nimport MoonOutlinedIcon from '@material-ui/icons/Brightness2Outlined';\n\nconst styles = theme => ({\n\tappbar: {\n\t\tbackgroundColor: 'var(--appbar)',\n\t\tcolor: 'var(--text)',\n\t\tboxShadow: '0 5px 10px -5px rgb(0 0 0 / 10%)',\n\t},\n\tspaceBetween: {\n\t\tjustifyContent: 'space-between',\n\t},\n\tbutton: {\n\t\tcolor: 'var(--text)',\n\t\ttextTransform: 'capitalize',\n\t\tfontSize: '14px',\n\t\tfontWeight: 600,\n\t},\n});\n\nfunction HideOnScroll(props) {\n\tconst { children, window } = props;\n\tconst trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n\treturn (\n\t\t<Slide appear={false} direction='down' in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\twindow: PropTypes.func,\n};\n\nfunction Appbar(props) {\n\tconst { classes, state, setState } = props;\n\n\tconst handleLightMode = () => {\n\t\tsetState('light');\n\t\tdocument.documentElement.setAttribute('data-theme', 'light');\n\t};\n\n\tconst handleDarkMode = () => {\n\t\tsetState('dark');\n\t\tdocument.documentElement.setAttribute('data-theme', 'dark');\n\t};\n\n\treturn (\n\t\t<HideOnScroll {...props}>\n\t\t\t<AppBar className={classes.appbar} elevation={0}>\n\t\t\t\t<Toolbar disableGutters className={classes.spaceBetween}>\n\t\t\t\t\t<Typography variant='h1' component='h1'>\n\t\t\t\t\t\tWhere in the world?\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={state === 'dark' ? handleLightMode : handleDarkMode}\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tstartIcon={\n\t\t\t\t\t\t\tstate === 'dark' ? <MoonFillIcon /> : <MoonOutlinedIcon />\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tDark Mode\n\t\t\t\t\t</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</HideOnScroll>\n\t);\n}\n\nexport default withStyles(styles)(Appbar);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { useHistory } from 'react-router-dom';\nimport {\n\tGrid,\n\tInputBase,\n\tInputAdornment,\n\tFormControl,\n\tInputLabel,\n\tNativeSelect,\n} from '@material-ui/core';\nimport Appbar from './Appbar';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n\twrapperDashboard: {\n\t\twidth: '100%',\n\t\theight: 'auto',\n\t\tbackgroundColor: 'transparent',\n\t},\n\theader: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'row wrap',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\twidth: '100%',\n\t\theight: '60px',\n\t\tmargin: `calc(64px + ${theme.spacing(4.5)}px) 0 ${theme.spacing(4.5)}px 0`,\n\t\tbackgroundColor: 'transparent',\n\t},\n\tmain: {\n\t\twidth: '100%',\n\t\theight: 'auto',\n\t\tbackgroundColor: 'transparent',\n\t},\n\tlightIcon: {\n\t\tcolor: 'var(--text)',\n\t\topacity: '0.7',\n\t},\n\tdarkIcon: {\n\t\tcolor: 'var(--text)',\n\t\topacity: '0.7',\n\t},\n});\n\nconst InputSearch = withStyles(theme => ({\n\troot: {\n\t\tbackgroundColor: 'var(--element)',\n\t\twidth: '400px',\n\t\tpadding: `${theme.spacing(1.2)}px ${theme.spacing(2.5)}px`,\n\t\tborderRadius: '5px',\n\t\tboxShadow: '0 0 12px -5px rgb(0 0 0 / 20%)',\n\t},\n\tinput: {\n\t\tbackgroundColor: 'transparent',\n\t\tfontSize: '14px',\n\t\tfontWeight: 300,\n\t\tcolor: 'var(--text)',\n\n\t\t'&::placeholder': {\n\t\t\tfontSize: '12px',\n\t\t\tfontWeight: 300,\n\t\t\tcolor: 'var(--text)',\n\t\t},\n\t},\n}))(InputBase);\n\nconst BootstrapInput = withStyles(theme => ({\n\troot: {\n\t\t'label + &': {\n\t\t\tmarginTop: theme.spacing(3),\n\t\t},\n\t},\n\tinput: {\n\t\tborderRadius: 4,\n\t\tposition: 'relative',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '1px solid #ced4da',\n\t\tfontSize: 16,\n\t\tpadding: '10px 26px 10px 12px',\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\n\t\t// Use the system font instead of the default Roboto font.\n\t\tfontFamily: [\n\t\t\t'-apple-system',\n\t\t\t'BlinkMacSystemFont',\n\t\t\t'\"Segoe UI\"',\n\t\t\t'Roboto',\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t'Arial',\n\t\t\t'sans-serif',\n\t\t\t'\"Apple Color Emoji\"',\n\t\t\t'\"Segoe UI Emoji\"',\n\t\t\t'\"Segoe UI Symbol\"',\n\t\t].join(','),\n\t\t'&:focus': {\n\t\t\tborderRadius: 4,\n\t\t\tborderColor: '#80bdff',\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\t\t},\n\t},\n}))(InputBase);\n\nfunction Dashboard(props) {\n\tconst { classes } = props;\n\tconst [state, setState] = React.useState('light');\n\tconst [age, setAge] = React.useState('');\n\tlet history = useHistory();\n\n\tconst handlePanelState = value => {\n\t\tconst url = String(value);\n\t\tlocalStorage.setItem('current', url);\n\t\thistory.push(`/${url}`);\n\t};\n\n\tconst handleChange = () => {};\n\n\treturn (\n\t\t<Grid container className={classes.wrapperDashboard}>\n\t\t\t<Appbar state={state} setState={setState}></Appbar>\n\t\t\t<Grid container className={classes.header}>\n\t\t\t\t<InputSearch\n\t\t\t\t\tvariant='filled'\n\t\t\t\t\tplaceholder='Search for a country...'\n\t\t\t\t\tstartAdornment={\n\t\t\t\t\t\t<InputAdornment position='start'>\n\t\t\t\t\t\t\t<SearchIcon\n\t\t\t\t\t\t\t\tfontSize='small'\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tstate === 'dark' ? classes.darkIcon : classes.lightIcon\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<FormControl className={classes.margin}>\n\t\t\t\t\t<InputLabel htmlFor='demo-customized-select-native'>Age</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tid='demo-customized-select-native'\n\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tinput={<BootstrapInput />}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option aria-label='None' value='' />\n\t\t\t\t\t\t<option value={10}>Ten</option>\n\t\t\t\t\t\t<option value={20}>Twenty</option>\n\t\t\t\t\t\t<option value={30}>Thirty</option>\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<main className={classes.main}></main>\n\t\t</Grid>\n\t);\n}\n\nexport default withStyles(styles)(Dashboard);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Dashboard from './Components/Dashboard';\n\nconst theme = {\n\ttypography: {\n\t\th1: {\n\t\t\tfontSize: '20px',\n\t\t\tfontWeight: 800,\n\t\t},\n\t},\n};\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={createMuiTheme(theme)}>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}